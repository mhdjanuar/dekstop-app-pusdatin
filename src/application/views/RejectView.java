/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package application.views;

import application.dao.DataVerifikasiDao;
import application.dao.ListDataDao;
import application.dao.RejectionNoteDao;
import application.daoimpl.DataVerifikasiDaoImpl;
import application.daoimpl.ListDataDaoImpl;
import application.daoimpl.RejectionNoteDaoImpl;
import application.models.DataVerifikasiModel;
import application.models.ListDataModel;
import application.models.RejectionNoteModel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author mhdja
 */
public class RejectView extends javax.swing.JPanel {
    private List<JCheckBox> checkBoxList = new ArrayList<>();
    private List<RejectionNoteModel> rejectionList = new ArrayList<>();
    private int idDataVerifikasi;
    private JPanel Pane; // Referensi ke Pane
    public final ListDataModel listDetail;
    public final RejectionNoteDao rejectionNoteDao;
    public final DataVerifikasiDao dataVerifikasiDao;
    
    
    /**
     * Creates new form RejectView
     * @param idDataVerifikasi
     * @param Pane
     */
    public RejectView(int idDataVerifikasi, JPanel Pane, ListDataModel listDetail) {
        initComponents();
        
        this.rejectionNoteDao = new RejectionNoteDaoImpl();
        this.dataVerifikasiDao = new DataVerifikasiDaoImpl();
        this.idDataVerifikasi = idDataVerifikasi;
        this.Pane = Pane;
        this.listDetail = listDetail;
        
        this.rejectionList = rejectionNoteDao.findAll();
        addLabelsToPanel(rejectionList);
    }
    
    private void addLabelsToPanel(List<RejectionNoteModel> listDataAll) {
        PaneList.setLayout(new BoxLayout(PaneList, BoxLayout.Y_AXIS));

        for (RejectionNoteModel data : listDataAll) {
            JPanel rowPanel = new JPanel(new GridBagLayout());
            rowPanel.setBackground(Color.BLACK);
            rowPanel.setPreferredSize(new Dimension(400, 50)); 
            rowPanel.setMinimumSize(new Dimension(400, 50));
            rowPanel.setMaximumSize(new Dimension(400, 50));

            GridBagConstraints gbc = new GridBagConstraints();
            gbc.fill = GridBagConstraints.HORIZONTAL;
            gbc.weighty = 1; 
            gbc.insets = new Insets(5, 5, 5, 5); 

            // JLabel (Nama Item di kiri)
            JLabel label = new JLabel(data.getDescription());
            label.setForeground(Color.WHITE);
            gbc.gridx = 0;
            gbc.weightx = 1.0;
            gbc.anchor = GridBagConstraints.WEST;
            rowPanel.add(label, gbc);

            // JCheckBox (Ceklis di kanan)
            JCheckBox checkBox = new JCheckBox();
            checkBox.setBackground(Color.BLACK);
            gbc.gridx = 1; // Kolom kedua
            gbc.weightx = 0; // Tidak mengambil banyak ruang
            gbc.anchor = GridBagConstraints.EAST;
            rowPanel.add(checkBox, gbc);

            // Tambahkan event listener agar hanya satu checkbox bisa dicentang
            checkBox.addActionListener(e -> {
                for (JCheckBox cb : checkBoxList) {
                    if (cb != checkBox) {
                        cb.setSelected(false); // Uncheck checkbox lainnya
                    }
                }
            });

            checkBoxList.add(checkBox); // Simpan semua checkbox ke dalam list

            // Tambahkan rowPanel ke PaneList
            PaneList.add(rowPanel);
            PaneList.add(Box.createRigidArea(new Dimension(0, 10))); 
        }

        // Refresh tampilan
        PaneList.revalidate();
        PaneList.repaint();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        PaneList = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(700, 700));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setText("ALASAN TIDAK LANJUT :");

        PaneList.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PaneListLayout = new javax.swing.GroupLayout(PaneList);
        PaneList.setLayout(PaneListLayout);
        PaneListLayout.setHorizontalGroup(
            PaneListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );
        PaneListLayout.setVerticalGroup(
            PaneListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 502, Short.MAX_VALUE)
        );

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SIMPAN");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PaneList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(PaneList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        for (int i = 0; i < checkBoxList.size(); i++) {
            if (checkBoxList.get(i).isSelected()) {
                RejectionNoteModel selectedData = rejectionList.get(i);

                // Konfirmasi sebelum update
                int confirm = JOptionPane.showConfirmDialog(this, 
                    "Apakah Anda yakin ingin menolak dengan alasan: " + selectedData.getDescription() + "?", 
                    "Konfirmasi Penolakan", 
                    JOptionPane.YES_NO_OPTION, 
                    JOptionPane.QUESTION_MESSAGE);

                // Jika user memilih "YES", lakukan update
                if (confirm == JOptionPane.YES_OPTION) {
                    DataVerifikasiModel data = new DataVerifikasiModel();
                    data.setHasilMuskelKelayakan("TIDAK LAYAK");
                    data.setKeteranganMuskel(selectedData.getDescription());
                    data.setId(idDataVerifikasi);

                    dataVerifikasiDao.update(data);

                    JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    
                    Pane.removeAll();
                    Pane.repaint();
                    Pane.revalidate();

                    // add Panel, add panel
                    Pane.add(new ListView(Pane, listDetail, "Edit"));
                    Pane.repaint();
                    Pane.revalidate();
                }
                return; // Hanya satu yang bisa dipilih
            }
        }
        JOptionPane.showMessageDialog(this, "Pilih salah satu data terlebih dahulu!", "Peringatan", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PaneList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
